<%# Added: classes to the li %>
<%# Added: classes to the a %>
<%# Added: div for submenu icons %>
<%# Removed: icon-* on links %>
<ul class="menu">
  <%= call_hook(:view_issues_context_menu_start, {:issues => @issues, :can => @can, :back => @back }) %>

<% if !@issue.nil? -%>
	<li class="edit"><%= context_menu_link l(:button_edit), {:controller => 'issues', :action => 'edit', :id => @issue},
	        :class => 'icon-edit', :disabled => !@can[:edit] %></li>
<% else %>
	<li class="edit"><%= context_menu_link l(:button_edit), {:controller => 'issues', :action => 'bulk_edit', :ids => @issues.collect(&:id)},
	        :class => 'icon-edit', :disabled => !@can[:edit] %></li>
<% end %>

  <% if @allowed_statuses.present? %>
	<li class="folder status">			
		<a href="#" class="context_item" onclick="return false;"><%= l(:field_status) %></a>
		<ul>
		<% @statuses.each do |s| -%>
		    <li><%= context_menu_link s.name, {:controller => 'issues', :action => 'bulk_edit', :ids => @issues.collect(&:id), :issue => {:status_id => s}, :back_url => @back}, :method => :post,
		                              :selected => (@issue && s == @issue.status), :disabled => !(@can[:update] && @allowed_statuses.include?(s)) %></li>
		<% end -%>
		</ul>
    <div class="submenu"></div>
	</li>
  <% end %>

	<% unless @trackers.nil? %>
	<li class="folder tracker">			
		<a href="#" class="context_item"><%= l(:field_tracker) %></a>
		<ul>
		<% @trackers.each do |t| -%>
		    <li><%= context_menu_link t.name, {:controller => 'issues', :action => 'bulk_edit', :ids => @issues.collect(&:id), :issue => {'tracker_id' => t}, :back_url => @back}, :method => :post,
		                              :selected => (@issue && t == @issue.tracker), :disabled => !@can[:edit] %></li>
		<% end -%>
		</ul>
    <div class="submenu"></div>
	</li>
	<% end %>

	<li class="folder priority">			
		<a href="#" class="context_item"><%= l(:field_priority) %></a>
		<ul>
		<% @priorities.each do |p| -%>
		    <li><%= context_menu_link p.name, {:controller => 'issues', :action => 'bulk_edit', :ids => @issues.collect(&:id), :issue => {'priority_id' => p}, :back_url => @back}, :method => :post,
		                              :selected => (@issue && p == @issue.priority), :disabled => (!@can[:edit] || @issues.detect {|i| !i.leaf?}) %></li>
		<% end -%>
		</ul>
    <div class="submenu"></div>
	</li>

  <% #TODO: allow editing versions when multiple projects %>
	<% unless @project.nil? || @project.shared_versions.open.empty? -%>
	<li class="folder fixed_version">			
		<a href="#" class="context_item"><%= l(:field_fixed_version) %></a>
		<ul>
		<% @project.shared_versions.open.sort.each do |v| -%>
		    <li><%= context_menu_link format_version_name(v), {:controller => 'issues', :action => 'bulk_edit', :ids => @issues.collect(&:id), :issue => {'fixed_version_id' => v}, :back_url => @back}, :method => :post,
		                              :selected => (@issue && v == @issue.fixed_version), :disabled => !@can[:update] %></li>
		<% end -%>
		    <li><%= context_menu_link l(:label_none), {:controller => 'issues', :action => 'bulk_edit', :ids => @issues.collect(&:id), :issue => {'fixed_version_id' => 'none'}, :back_url => @back}, :method => :post,
		                              :selected => (@issue && @issue.fixed_version.nil?), :disabled => !@can[:update] %></li>
		</ul>
    <div class="submenu"></div>
	</li>
	<% end %>

	<% if @assignables.present? -%>
	<li class="folder assigned">			
		<a href="#" class="context_item"><%= l(:field_assigned_to) %></a>
		<ul>
		<% @assignables.each do |u| -%>
		    <li><%= context_menu_link u.name, {:controller => 'issues', :action => 'bulk_edit', :ids => @issues.collect(&:id), :issue => {'assigned_to_id' => u}, :back_url => @back}, :method => :post,
		                              :selected => (@issue && u == @issue.assigned_to), :disabled => !@can[:update] %></li>
		<% end -%>
		    <li><%= context_menu_link l(:label_nobody), {:controller => 'issues', :action => 'bulk_edit', :ids => @issues.collect(&:id), :issue => {'assigned_to_id' => 'none'}, :back_url => @back}, :method => :post,
		                              :selected => (@issue && @issue.assigned_to.nil?), :disabled => !@can[:update] %></li>
		</ul>
    <div class="submenu"></div>
	</li>
	<% end %>

	<% unless @project.nil? || @project.issue_categories.empty? -%>
	<li class="folder">			
		<a href="#" class="context_item"><%= l(:field_category) %></a>
		<ul>
		<% @project.issue_categories.each do |u| -%>
		    <li><%= context_menu_link u.name, {:controller => 'issues', :action => 'bulk_edit', :ids => @issues.collect(&:id), :issue => {'category_id' => u}, :back_url => @back}, :method => :post,
		                              :selected => (@issue && u == @issue.category), :disabled => !@can[:update] %></li>
		<% end -%>
		    <li><%= context_menu_link l(:label_none), {:controller => 'issues', :action => 'bulk_edit', :ids => @issues.collect(&:id), :issue => {'category_id' => 'none'}, :back_url => @back}, :method => :post,
		                              :selected => (@issue && @issue.category.nil?), :disabled => !@can[:update] %></li>
		</ul>
    <div class="submenu"></div>
  </li>
	<% end -%>

  <% if Issue.use_field_for_done_ratio? %>
	<li class="folder done_ratio">
		<a href="#" class="context_item"><%= l(:field_done_ratio) %></a>
		<ul>
		<% (0..10).map{|x|x*10}.each do |p| -%>
		    <li><%= context_menu_link "#{p}%", {:controller => 'issues', :action => 'bulk_edit', :ids => @issues.collect(&:id), :issue => {'done_ratio' => p}, :back_url => @back}, :method => :post,
		                                  :selected => (@issue && p == @issue.done_ratio), :disabled => (!@can[:edit] || @issues.detect {|i| !i.leaf?}) %></li>
		<% end -%>
		</ul>
    <div class="submenu"></div>
	</li>
  <% end %>
	
<% if !@issue.nil? %>
	<% if @can[:log_time] -%>
	<li class="log_time"><%= context_menu_link l(:button_log_time), {:controller => 'timelog', :action => 'new', :issue_id => @issue},
	        :class => 'context_item' %></li>
	<% end %>
	<% if User.current.logged? %>
	<li class="watch"><%= watcher_link(@issue, User.current) %></li>
	<% end %>
<% end %>

<% if @issue.present? %>
  <li><%= context_menu_link l(:button_duplicate), {:controller => 'issues', :action => 'new', :project_id => @project, :copy_from => @issue},
	        :class => 'icon-duplicate', :disabled => !@can[:copy] %></li>
<% end %>

  <li class="move"><%= context_menu_link l(:button_move), {:controller => 'issues', :action => 'move', :ids => @issues.collect(&:id)},
	                        :class => 'context_item', :disabled => !@can[:move]  %></li>
  <%# All users can copy because the copy acton will check their permissions on the target project %>
  <li class="copy"><%= context_menu_link l(:button_copy), {:controller => 'issues', :action => 'bulk_copy', :project_id => @project, :ids => @issues.collect(&:id)},
                                :class => 'context_item' %></li>
  <li class="delete"><%= context_menu_link l(:button_delete), {:controller => 'issues', :action => 'destroy', :ids => @issues.collect(&:id)},
                            :method => :post, :confirm => l(:text_issues_destroy_confirmation), :class => 'context_item', :disabled => !@can[:delete] %></li>

  <%= call_hook(:view_issues_context_menu_end, {:issues => @issues, :can => @can, :back => @back }) %>
</ul>
